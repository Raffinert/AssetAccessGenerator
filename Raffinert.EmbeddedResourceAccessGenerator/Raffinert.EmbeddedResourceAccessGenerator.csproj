<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<IsRoslynComponent>true</IsRoslynComponent>
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
		<TargetFramework>netstandard2.0</TargetFramework>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<Authors>Christoph Hornung, Yevhen Cherkes</Authors>
		<PackageId>Raffinert.EmbeddedResourceAccessGenerator</PackageId>
		<Version>1.0.1</Version>
		<Copyright>Christoph Hornung, Yevhen Cherkes</Copyright>
		<Description>Generates strongly typed access methods for embedded resources.</Description>
		<PackageProjectUrl>https://github.com/Raffinert/AssetAccessGenerator</PackageProjectUrl>
		<RepositoryUrl>https://github.com/Raffinert/AssetAccessGenerator</RepositoryUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageReleaseNotes>
			v 1.0.1
			- Added ReadAllBytes and ReadAllBytesAsync methods
			v 1.0.0
			- Removed EmbeddedResources.{{identifierName}}_Stream and EmbeddedResources.StreamReader {{identifierName}}_Reader properties
			- Added ReadAllText and ReadAllTextAsync methods
			- No longer generating access for all AdditionalFiles as EmbeddedResources and thereforeit can be used together with ContentItemAccessGenerator and NoneItemAccessGenerator without conflicts.
			Precedor's versions - see https://github.com/ChristophHornung/EmbeddedResourceGenerator/blob/main/EmbeddedResourceAccessGenerator/EmbeddedResourceAccessGenerator.csproj
		</PackageReleaseNotes>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<DevelopmentDependency>true</DevelopmentDependency>
		<PackageTags>embeddedresource;manifestresource;code-generator;source-generator;csharp</PackageTags>
		<RootNamespace>Raffinert.$(MSBuildProjectName.Replace(" ", "_"))</RootNamespace>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="..\Raffinert.AccessGenerator.Core\EmbeddedResourceAccessGenerator.cs" Link="Core\EmbeddedResourceAccessGenerator.cs" />
		<Compile Include="..\Raffinert.AccessGenerator.Core\EverettIdentifierHelper.cs" Link="Core\EverettIdentifierHelper.cs" />
		<Compile Include="..\Raffinert.AccessGenerator.Core\FileAccessGenerator.cs" Link="Core\FileAccessGenerator.cs" />
		<Compile Include="..\Raffinert.AccessGenerator.Core\GeneratorHelper.cs" Link="Core\GeneratorHelper.cs" />
		<Compile Include="..\Raffinert.AccessGenerator.Core\ResourceItem.cs" Link="Core\ResourceItem.cs" />
		<Compile Include="..\Raffinert.AccessGenerator.Core\Utils.cs" Link="Core\Utils.cs" />
	</ItemGroup>

	<ItemGroup>
		<None Include="..\README.md" Link="README.md" Pack="true" PackagePath=".">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<CompilerVisibleProperty Include="RootNamespace" />
		<CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="SourceItemGroup" />
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Include="build\Raffinert.EmbeddedResourceAccessGenerator.props" Pack="true" PackagePath="build">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.10.0" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="Core\" />
	</ItemGroup>
</Project>